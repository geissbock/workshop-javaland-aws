import jp.classmethod.aws.gradle.s3.AmazonS3FileUploadTask

buildscript {
	ext {
		springBootVersion = "1.5.8.RELEASE"
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("jp.classmethod.aws:gradle-aws-plugin:0.30")
	}
}

apply plugin: "java"
apply plugin: "org.springframework.boot"
apply plugin: "jp.classmethod.aws.s3"

group = "de.inovex.training.whiskystore.orders"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile(
			"org.springframework.boot:spring-boot-starter-data-jpa:1.5.10.RELEASE",
			"org.springframework.boot:spring-boot-starter-web:1.5.10.RELEASE",
			"org.springframework.cloud:spring-cloud-starter-hystrix:1.4.3.RELEASE",
			"org.springframework.boot:spring-boot-starter-actuator:1.5.10.RELEASE",
			"com.h2database:h2:1.4.196",
			"org.postgresql:postgresql:42.2.1",
			"org.flywaydb:flyway-core:5.0.7",
			"com.squareup.retrofit2:retrofit:2.3.0",
			"com.squareup.retrofit2:converter-gson:2.3.0"
	)
}

aws {
	profileName = "javaland"
	region = "eu-central-1"
}

task uploadToS3(type: AmazonS3FileUploadTask, dependsOn: build) {
	overwrite true
	file jar.archivePath
	bucketName "javaland-whiskystore-terraform"
	key "${userPrefix}/jars/orders/${jar.archiveName}"
}

task buildAndDeploy(type: GradleBuild) {
	dependsOn ":products:buildAndDeploy"
	dependsOn ":payment:buildAndDeploy"

	tasks = ['clean', 'uploadToS3', 'deploy']
}